name: Build APK and AAB

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build-android:
    name: ${{ matrix.build_name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: ['14']
    steps:
      - uses: actions/checkout@v2

      - uses: bahmutov/npm-install@v1
      - run: yarn --network-concurrency 1 --network-timeout 120000

      - name: Increase File Watch Limit
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Build Android Release APK
        run: |
          perl -pi -e 's/YOUR_SENTRY_TOKEN/$ENV{TOKEN}/' android/sentry.properties
          export SENTRY_PROPERTIES=android/sentry.properties
          cd android && ./gradlew assembleRelease
        env:
          TOKEN: ${{ secrets.SENTRY_TOKEN }}

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./android/app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.MYAPP_RELEASE_STORE_FILE_KEY }}
          alias: ${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}
          keyPassword: ${{ secrets.MYAPP_RELEASE_KEY_PASSWORD }}

      - name: Build Android Release AAB
        run: |
          export SENTRY_PROPERTIES=android/sentry.properties
          cd android && ./gradlew bundleRelease
        env:
          TOKEN: ${{ secrets.SENTRY_TOKEN }}

      - name: Sign AAB
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.MYAPP_RELEASE_STORE_FILE_KEY }}
          alias: ${{ secrets.MYAPP_RELEASE_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.MYAPP_RELEASE_STORE_PASSWORD }}
          keyPassword: ${{ secrets.MYAPP_RELEASE_KEY_PASSWORD }}

      - name: Upload APK Release Asset
        if: github.event_name == 'release' && github.repository == 'turtlecoin/turtlecoin-mobile-wallet'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./android/app/build/outputs/apk/release/app-release.apk
          asset_name: tonchan.apk
          asset_content_type: application/octet-stream

      - name: Upload AAB Release Asset
        if: github.event_name == 'release' && github.repository == 'turtlecoin/turtlecoin-mobile-wallet'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./android/app/build/outputs/bundle/release/app.aab
          asset_name: tonchan.aab
          asset_content_type: application/octet-stream
